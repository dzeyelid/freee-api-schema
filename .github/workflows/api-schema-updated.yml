name: Notify API schema updates

on:
  release:
    types:
      - released

env:
  EVENT_TYPE: api-schema-updated
  REPOSITORY_ACCOUNTING_SDK_CSHARP: freee/freee-accounting-sdk-csharp
  REPOSITORY_ACCOUNTING_SDK_JAVA: freee/freee-accounting-sdk-java
  REPOSITORY_ACCOUNTING_SDK_PHP: freee/freee-accounting-sdk-php

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      UPDATES_ARE_FOUND: ${{ 0 < steps.updates_under_sdk_compatible.outputs.COUNT }}
    steps:
      - name: check context
        run: echo $CONTEXT | jq
        env:
          CONTEXT: ${{ toJson(github) }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Get updates under _sdk_compatible/
        id: updates_under_sdk_compatible
        run: |
          COUNT=`git diff origin/master --name-only | grep -E -n '^_sdk_compatible/(.+)$' | wc -l`
          if [ $COUNT -gt 0 ]; then
            echo 'Updates are found under `_sdk_compatible/`.'
          else
            echo "Not found"
          fi
          echo "::set-output name=COUNT::$COUNT"

  show:
    needs: check
    if: ${{ needs.check.outputs.UPDATES_ARE_FOUND == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo $FOUND
        env:
          FOUND: ${{ needs.check.outputs.UPDATES_ARE_FOUND == 'true' }}

      - run: echo 'Found!'
        if: ${{ needs.check.outputs.UPDATES_ARE_FOUND == 'true' }}

      - run: echo 'Not found'
        if: ${{ ! (needs.check.outputs.UPDATES_ARE_FOUND == 'true') }}

  # notify_to_accounting_sdk_csharp:
  #   name: Notify to accounting SDK for C#
  #   needs: check
  #   if: ${{ needs.check.outputs.UPDATES_ARE_FOUND }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Send repository dispatch
  #       uses: octokit/request-action@v2.x
  #       with:
  #         route: POST /repos/:repo/dispatches
  #         repo: ${{ env.REPOSITORY_ACCOUNTING_SDK_CSHARP }}
  #         event_type: ${{ env.EVENT_TYPE }}
  #         client_payload: |
  #           origin_ref: ${{ github.ref }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}

  # notify_to_accounting_sdk_java:
  #   name: Notify to accounting SDK for Java
  #   needs: check
  #   if: ${{ needs.check.outputs.UPDATES_ARE_FOUND }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Send repository dispatch
  #       uses: octokit/request-action@v2.x
  #       with:
  #         route: POST /repos/:repo/dispatches
  #         repo: ${{ env.REPOSITORY_ACCOUNTING_SDK_JAVA }}
  #         event_type: ${{ env.EVENT_TYPE }}
  #         client_payload: |
  #           origin_ref: ${{ github.ref }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}

  # notify_to_accounting_sdk_php:
  #   name: Notify to accounting SDK for PHP
  #   needs: check
  #   if: ${{ needs.check.outputs.UPDATES_ARE_FOUND }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Send repository dispatch
  #       uses: octokit/request-action@v2.x
  #       with:
  #         route: POST /repos/:repo/dispatches
  #         repo: ${{ env.REPOSITORY_ACCOUNTING_SDK_PHP }}
  #         event_type: ${{ env.EVENT_TYPE }}
  #         client_payload: |
  #           origin_ref: ${{ github.ref }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
